FROM node:current-alpine3.11

ARG HOME=${HOME}
ARG PWD=${PWD}
ARG UMBREL=${UMBREL}
ARG THIS_FILE=${THIS_FILE}
ARG TIME=${TIME}
ARG HOST_USER=${HOST_USER}
ARG HOST_UID=${HOST_UID}
ARG PUBLIC_PORT=${PUBLIC_PORT}
ARG NODE_PORT=${NODE_PORT}
ARG SERVICE_TARGET=${SERVICE_TARGET}
ARG ALPINE_VERSION=${ALPINE_VERSION}
ARG WHISPER_VERSION=${WHISPER_VERSION}
ARG CARBON_VERSION=${CARBON_VERSION}
ARG GRAPHITE_VERSION=${GRAPHITE_VERSION}
ARG STATSD_VERSION=${STATSD_VERSION}
ARG GRAFANA_VERSION=${GRAFANA_VERSION}
ARG DJANGO_VERSION=${DJANGO_VERSION}
ARG PROJECT_NAME=${PROJECT_NAME}
ARG DOCKER_BUILD_TYPE=${DOCKER_BUILD_TYPE}
ARG SLIM=${SLIM}
ARG DOCKERFILE=${DOCKERFILE}
ARG DOCKERFILE_BODY=${DOCKERFILE_BODY}
ARG GIT_USER_NAME=${GIT_USER_NAME}
ARG GIT_USER_EMAIL=${GIT_USER_EMAIL}
ARG GIT_SERVER=${GIT_SERVER}
ARG GIT_PROFILE=${GIT_PROFILE}
ARG GIT_BRANCH=${GIT_BRANCH}
ARG GIT_HASH=${GIT_HASH}
ARG GIT_REPO_ORIGIN=${GIT_REPO_ORIGIN}
ARG GIT_REPO_NAME=${GIT_REPO_NAME}
ARG GIT_REPO_PATH=${GIT_REPO_PATH}
ARG DOCKERFILE=${DOCKERFILE}
ARG DOCKERFILE_PATH=${DOCKERFILE_PATH}
ARG BITCOIN_CONF=${BITCOIN_CONF}
ARG BITCOIN_DATA_DIR=${BITCOIN_DATA_DIR}
ARG STATOSHI_DATA_DIR=${STATOSHI_DATA_DIR}
ARG NOCACHE=${NOCACHE}
ARG VERBOSE=${VERBOSE}
ARG PUBLIC_PORT=${PUBLIC_PORT}
ARG NODE_PORT=${NODE_PORT}
ARG PASSWORD=${PASSWORD}
ARG CMD_ARGUMENTS=${CMD_ARGUMENTS}

ENV HOME=${HOME}
ENV PWD=${PWD}
ENV UMBREL=${UMBREL}
ENV THIS_FILE=${THIS_FILE}
ENV TIME=${TIME}
ENV HOST_USER=${HOST_USER}
ENV HOST_UID=${HOST_UID}
ENV PUBLIC_PORT=${PUBLIC_PORT}
ENV NODE_PORT=${NODE_PORT}
ENV SERVICE_TARGET=${SERVICE_TARGET}
ENV ALPINE_VERSION=${ALPINE_VERSION}
ENV WHISPER_VERSION=${WHISPER_VERSION}
ENV CARBON_VERSION=${CARBON_VERSION}
ENV GRAPHITE_VERSION=${GRAPHITE_VERSION}
ENV STATSD_VERSION=${STATSD_VERSION}
ENV GRAFANA_VERSION=${GRAFANA_VERSION}
ENV DJANGO_VERSION=${DJANGO_VERSION}
ENV PROJECT_NAME=${PROJECT_NAME}
ENV DOCKER_BUILD_TYPE=${DOCKER_BUILD_TYPE}
ENV SLIM=${SLIM}
ENV DOCKERFILE=${DOCKERFILE}
ENV DOCKERFILE_BODY=${DOCKERFILE_BODY}
ENV GIT_USER_NAME=${GIT_USER_NAME}
ENV GIT_USER_EMAIL=${GIT_USER_EMAIL}
ENV GIT_SERVER=${GIT_SERVER}
ENV GIT_PROFILE=${GIT_PROFILE}
ENV GIT_BRANCH=${GIT_BRANCH}
ENV GIT_HASH=${GIT_HASH}
ENV GIT_REPO_ORIGIN=${GIT_REPO_ORIGIN}
ENV GIT_REPO_NAME=${GIT_REPO_NAME}
ENV GIT_REPO_PATH=${GIT_REPO_PATH}
ENV DOCKERFILE=${DOCKERFILE}
ENV DOCKERFILE_PATH=${DOCKERFILE_PATH}
ENV BITCOIN_CONF=${BITCOIN_CONF}
ENV BITCOIN_DATA_DIR=${BITCOIN_DATA_DIR}
ENV STATOSHI_DATA_DIR=${STATOSHI_DATA_DIR}
ENV NOCACHE=${NOCACHE}
ENV VERBOSE=${VERBOSE}
ENV PUBLIC_PORT=${PUBLIC_PORT}
ENV NODE_PORT=${NODE_PORT}
ENV PASSWORD=${PASSWORD}
ENV CMD_ARGUMENTS=${CMD_ARGUMENTS}

RUN apk add git bash bash-completion make
# Create app directory
WORKDIR /usr/src/app

# Install app dependencies
# A wildcard is used to ensure both package.json AND package-lock.json are copied
# where available (npm@5+)
COPY package*.json ./

RUN npm install
# If you are building your code for production
# RUN npm ci --only=production

# Bundle app source
COPY . .

COPY docker-entrypoint.sh /usr/local/bin/

EXPOSE ${PUBLIC_PORT} ${NODE_PORT} 3002 3003
#CMD [ "npm", "start" ]
CMD [ "make", "start" ]
